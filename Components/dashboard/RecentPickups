import React from 'react';
import { motion } from 'framer-motion';
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { format } from "date-fns";
import { Truck, Gift, DollarSign, Calendar, MapPin } from "lucide-react";

const statusColors = {
  scheduled: "bg-blue-100 text-blue-800",
  in_progress: "bg-yellow-100 text-yellow-800",
  completed: "bg-green-100 text-green-800",
  cancelled: "bg-red-100 text-red-800"
};

export default function RecentPickups({ pickups = [], isLoading }) {
  if (isLoading) {
    return (
      <Card className="glass-effect border-0">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Truck className="w-5 h-5 text-emerald-600" />
            Recent Pickups
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {[...Array(3)].map((_, i) => (
              <div key={i} className="animate-pulse">
                <div className="h-4 bg-gray-200 rounded mb-2"></div>
                <div className="h-3 bg-gray-200 rounded w-2/3"></div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="glass-effect border-0">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Truck className="w-5 h-5 text-emerald-600" />
          Recent Pickups
        </CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {pickups.length === 0 ? (
            <div className="text-center py-8">
              <div className="text-4xl mb-4">ðŸ“¦</div>
              <p className="text-gray-500">No pickups yet</p>
              <p className="text-sm text-gray-400">Schedule your first pickup to get started!</p>
            </div>
          ) : (
            pickups.map((pickup, index) => (
              <motion.div
                key={pickup.id}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1 }}
                className="p-4 bg-white rounded-xl border border-gray-100 hover:shadow-md transition-shadow"
              >
                <div className="flex items-start justify-between mb-3">
                  <div className="flex items-center gap-2">
                    <Calendar className="w-4 h-4 text-gray-400" />
                    <span className="font-medium text-gray-900">
                      {format(new Date(pickup.pickup_date), "MMM d, yyyy")}
                    </span>
                  </div>
                  <Badge className={statusColors[pickup.status]}>
                    {pickup.status}
                  </Badge>
                </div>
                
                <div className="flex items-center gap-2 mb-2">
                  <MapPin className="w-4 h-4 text-gray-400" />
                  <span className="text-sm text-gray-600">{pickup.address}</span>
                </div>
                
                <div className="flex items-center gap-4 text-sm">
                  <div className="flex items-center gap-1">
                    {pickup.choice_type === 'donate' ? (
                      <Gift className="w-4 h-4 text-purple-500" />
                    ) : (
                      <DollarSign className="w-4 h-4 text-green-500" />
                    )}
                    <span className="text-gray-600">
                      {pickup.choice_type === 'donate' ? 'Donated for points' : 'Earn money'}
                    </span>
                  </div>
                  {pickup.status === 'completed' && (
                    <div className="text-emerald-600 font-medium">
                      {pickup.choice_type === 'donate' 
                        ? `+${pickup.points_earned} points`
                        : `â‚¹${pickup.money_earned}`
                      }
                    </div>
                  )}
                </div>
              </motion.div>
            ))
          )}
        </div>
      </CardContent>
    </Card>
  );
}